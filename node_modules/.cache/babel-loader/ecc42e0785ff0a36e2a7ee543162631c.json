{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Unity = void 0;\n\nvar react_1 = require(\"react\");\n\nvar react_2 = require(\"react\");\n\nvar use_unity_instance_1 = require(\"../hooks/use-unity-instance\");\n\nvar use_unity_loader_1 = require(\"../hooks/use-unity-loader\");\n\nvar generate_unity_instance_parameters_1 = require(\"../utils/generate-unity-instance-parameters\");\n/**\r\n * A unique instance identifier for each mounted Unity Instance.\r\n */\n\n\nvar unityInstanceIdentifier = 0;\n/**\r\n * Renders the Unity Instance to the React DOM.\r\n * @param props Properties of the Unity Component.\r\n * @returns A React Element.\r\n */\n\nfunction Unity(props) {\n  var htmlCanvasElement = (0, react_2.useRef)(null);\n  var unityContext = (0, react_2.useState)(props.unityContext)[0];\n  var unityInstanceParameters = (0, generate_unity_instance_parameters_1.generateUnityInstanceParameters)(unityContext, props); // The Unity Loader is required for the unity instance to be created.\n\n  var unityLoaderStatus = (0, use_unity_loader_1.useUnityLoader)(unityContext.unityConfig.loaderUrl); // Creates the Unity Instance while defining a set of hooks which indicate\n  // whether the Unity Instance is ready to be used among with its progression.\n\n  var _a = (0, use_unity_instance_1.useUnityInstance)(unityLoaderStatus, htmlCanvasElement.current, unityInstanceParameters),\n      unityInstance = _a.unityInstance,\n      progression = _a.progression,\n      error = _a.error; // Effect hook will be called when the Unity instance changes.\n\n\n  (0, react_2.useEffect)(function () {\n    // If the Unity Instance has been defined, it will be passed to the\n    // Unity Context.\n    if (unityInstance !== null) {\n      unityContext.unityInstance = unityInstance;\n    }\n  }, [unityInstance]); // Effect hook will be called when the reference to the canvas changes.\n\n  (0, react_2.useEffect)(function () {\n    // Whether or not the canvas has been defined, it will be set as the\n    // current html canvas element on the Unity Context.\n    unityContext.htmlCanvasElement = htmlCanvasElement.current;\n  }, [htmlCanvasElement]); // Effect hook will be called when the Unity Instance progession changes.\n\n  (0, react_2.useEffect)(function () {\n    // If the Unity Instance loading progression hits 1, then this means that\n    //the Unity Instance is initialized successfully and is ready to be used.\n    if (progression === 1) {\n      // When the application is loaded, we'll send over a reference to the\n      // canvas element. When the HTML Canvas Element ref is defined, an event\n      // will be dispatched.\n      if (htmlCanvasElement.current !== null) {\n        unityContext.dispatchEvent(\"canvas\", htmlCanvasElement.current);\n      } // The loaded event is dispatched.\n\n\n      unityContext.dispatchEvent(\"loaded\");\n    } // Dispatches an event every time the Unity Instance progression changes.\n\n\n    unityContext.dispatchEvent(\"progress\", progression);\n  }, [progression]); // Effect hook will be called when the Unity Instance threw an error.\n\n  (0, react_2.useEffect)(function () {\n    // If the Unity Instance threw an error, then the error event is\n    // dispatched.\n    if (error !== null) {\n      unityContext.dispatchEvent(\"error\", error);\n    }\n  }, [error]); // Event hook will be called when the component mounts and unmounts.\n\n  (0, react_2.useEffect)(function () {\n    // Each time a component is mounted, the Unity Context identifier is\n    // incremented to ensure that each component is referenced correctly.\n    unityInstanceIdentifier++;\n    return function () {\n      // If the Unity Instance is defined, Quit will be invoked on the Unity\n      // Instance. This removes the Unity Loader and Framework from memory.\n      unityContext === null || unityContext === void 0 ? void 0 : unityContext.quitUnityInstance();\n    };\n  }, []); // Renders the actual canvas element which Unity will use to render.\n\n  return (0, react_1.createElement)(\"canvas\", {\n    // Unity 2021.2 and above requires a unique identifier for each canvas\n    // internally. This is not documented in the Unity documentation, but\n    // it is required for the canvas to be rendered. This is further explained\n    // in https://github.com/jeffreylanters/react-unity-webgl/issues/223.\n    id: \"unity-canvas-\".concat(unityInstanceIdentifier),\n    // A reference to the canvas element is required to create a Unity Instance.\n    ref: htmlCanvasElement,\n    // Push through of some properties.\n    className: props.className || undefined,\n    style: props.style || {},\n    tabIndex: props.tabIndex || undefined\n  });\n}\n\nexports.Unity = Unity;","map":{"version":3,"sources":["C:/Users/seeba/Desktop/profesoriepam/node_modules/react-unity-webgl/distribution/components/unity.js"],"names":["Object","defineProperty","exports","value","Unity","react_1","require","react_2","use_unity_instance_1","use_unity_loader_1","generate_unity_instance_parameters_1","unityInstanceIdentifier","props","htmlCanvasElement","useRef","unityContext","useState","unityInstanceParameters","generateUnityInstanceParameters","unityLoaderStatus","useUnityLoader","unityConfig","loaderUrl","_a","useUnityInstance","current","unityInstance","progression","error","useEffect","dispatchEvent","quitUnityInstance","createElement","id","concat","ref","className","undefined","style","tabIndex"],"mappings":"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","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Unity = void 0;\r\nvar react_1 = require(\"react\");\r\nvar react_2 = require(\"react\");\r\nvar use_unity_instance_1 = require(\"../hooks/use-unity-instance\");\r\nvar use_unity_loader_1 = require(\"../hooks/use-unity-loader\");\r\nvar generate_unity_instance_parameters_1 = require(\"../utils/generate-unity-instance-parameters\");\r\n/**\r\n * A unique instance identifier for each mounted Unity Instance.\r\n */\r\nvar unityInstanceIdentifier = 0;\r\n/**\r\n * Renders the Unity Instance to the React DOM.\r\n * @param props Properties of the Unity Component.\r\n * @returns A React Element.\r\n */\r\nfunction Unity(props) {\r\n    var htmlCanvasElement = (0, react_2.useRef)(null);\r\n    var unityContext = (0, react_2.useState)(props.unityContext)[0];\r\n    var unityInstanceParameters = (0, generate_unity_instance_parameters_1.generateUnityInstanceParameters)(unityContext, props);\r\n    // The Unity Loader is required for the unity instance to be created.\r\n    var unityLoaderStatus = (0, use_unity_loader_1.useUnityLoader)(unityContext.unityConfig.loaderUrl);\r\n    // Creates the Unity Instance while defining a set of hooks which indicate\r\n    // whether the Unity Instance is ready to be used among with its progression.\r\n    var _a = (0, use_unity_instance_1.useUnityInstance)(unityLoaderStatus, htmlCanvasElement.current, unityInstanceParameters), unityInstance = _a.unityInstance, progression = _a.progression, error = _a.error;\r\n    // Effect hook will be called when the Unity instance changes.\r\n    (0, react_2.useEffect)(function () {\r\n        // If the Unity Instance has been defined, it will be passed to the\r\n        // Unity Context.\r\n        if (unityInstance !== null) {\r\n            unityContext.unityInstance = unityInstance;\r\n        }\r\n    }, [unityInstance]);\r\n    // Effect hook will be called when the reference to the canvas changes.\r\n    (0, react_2.useEffect)(function () {\r\n        // Whether or not the canvas has been defined, it will be set as the\r\n        // current html canvas element on the Unity Context.\r\n        unityContext.htmlCanvasElement = htmlCanvasElement.current;\r\n    }, [htmlCanvasElement]);\r\n    // Effect hook will be called when the Unity Instance progession changes.\r\n    (0, react_2.useEffect)(function () {\r\n        // If the Unity Instance loading progression hits 1, then this means that\r\n        //the Unity Instance is initialized successfully and is ready to be used.\r\n        if (progression === 1) {\r\n            // When the application is loaded, we'll send over a reference to the\r\n            // canvas element. When the HTML Canvas Element ref is defined, an event\r\n            // will be dispatched.\r\n            if (htmlCanvasElement.current !== null) {\r\n                unityContext.dispatchEvent(\"canvas\", htmlCanvasElement.current);\r\n            }\r\n            // The loaded event is dispatched.\r\n            unityContext.dispatchEvent(\"loaded\");\r\n        }\r\n        // Dispatches an event every time the Unity Instance progression changes.\r\n        unityContext.dispatchEvent(\"progress\", progression);\r\n    }, [progression]);\r\n    // Effect hook will be called when the Unity Instance threw an error.\r\n    (0, react_2.useEffect)(function () {\r\n        // If the Unity Instance threw an error, then the error event is\r\n        // dispatched.\r\n        if (error !== null) {\r\n            unityContext.dispatchEvent(\"error\", error);\r\n        }\r\n    }, [error]);\r\n    // Event hook will be called when the component mounts and unmounts.\r\n    (0, react_2.useEffect)(function () {\r\n        // Each time a component is mounted, the Unity Context identifier is\r\n        // incremented to ensure that each component is referenced correctly.\r\n        unityInstanceIdentifier++;\r\n        return function () {\r\n            // If the Unity Instance is defined, Quit will be invoked on the Unity\r\n            // Instance. This removes the Unity Loader and Framework from memory.\r\n            unityContext === null || unityContext === void 0 ? void 0 : unityContext.quitUnityInstance();\r\n        };\r\n    }, []);\r\n    // Renders the actual canvas element which Unity will use to render.\r\n    return (0, react_1.createElement)(\"canvas\", {\r\n        // Unity 2021.2 and above requires a unique identifier for each canvas\r\n        // internally. This is not documented in the Unity documentation, but\r\n        // it is required for the canvas to be rendered. This is further explained\r\n        // in https://github.com/jeffreylanters/react-unity-webgl/issues/223.\r\n        id: \"unity-canvas-\".concat(unityInstanceIdentifier),\r\n        // A reference to the canvas element is required to create a Unity Instance.\r\n        ref: htmlCanvasElement,\r\n        // Push through of some properties.\r\n        className: props.className || undefined,\r\n        style: props.style || {},\r\n        tabIndex: props.tabIndex || undefined,\r\n    });\r\n}\r\nexports.Unity = Unity;\r\n"]},"metadata":{},"sourceType":"script"}